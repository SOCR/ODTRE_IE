m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 20,
lambda.pct = 0.3,
depth = 1
)
# Plot Figure 2 stage 2
stage2 <- plot(plot.DTR.tree(round(hyper_tree2, 0), H = H))
saveWidget(stage2,"temp.html")
webshot("temp.html","stage2_dtr.png", vwidth = 500, vheight = 500)
rec_trt <- predict.DTR(hyper_tree2, newdata = H)
R2.pred <- predict(R2surf, newdata = cbind(A = rec_trt, H))
R2.true <- predict(R2surf, newdata = cbind(A = A, H))
#Stage 1
#Calculate pseudo outcomes.
Y1 <- vital_demo_drug_2$final_sbp + R2.pred - R2.true
Y1_pseudo = c()
for (i in vital_demo_drug_1$icustay_id) {
if (i %in% vital_demo_drug_2$icustay_id) {
Y1_pseudo = c(Y1_pseudo, Y1[which(vital_demo_drug_2$icustay_id == i)])
} else{
Y1_pseudo = c(Y1_pseudo, NA)
}
}
vital_demo_drug_1$Y1_pseudo = Y1_pseudo
vital_demo_drug_1$final_pseudo <-
ifelse(
is.na(vital_demo_drug_1$Y1_pseudo),
vital_demo_drug_1$final_sbp,
vital_demo_drug_1$Y1_pseudo
)
vital_demo_drug_1$TempC_Mean[which(is.na(vital_demo_drug_1$TempC_Mean))] = mean(vital_demo_drug_1$TempC_Mean, na.rm = TRUE)
Y <- (vital_demo_drug_1$SysBP_Max - vital_demo_drug_1$final_pseudo)
#Characteristics
# HR,Resp,ADMISSION_AGE,wt_avg,GENDER,smoke, kidney, diabetes, copd,neuro
H <-
cbind(vital_demo_drug_1[, c(
"SysBP_Max",
"DiasBP_Max",
"HeartRate_Mean",
"TempC_Mean",
"SpO2_Mean",
"hemoglobin_max",
"age",
"creatinine_min",
"wt_avg",
"GENDER",
"smoke",
"kidney",
"diabetes",
"copd",
"hyper"
)])
#1=A,2=B,3=C,4=D
A = vital_demo_drug_1$trt
R1surf1 <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 1000,
importance = TRUE
)
R1surf <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 500,
mtry = 4,
nodesize = 20,
importance = TRUE
)
mu.hat <- cbind(
predict(R1surf, newdata = cbind(A = rep(1, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(2, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(3, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(4, nrow(
H
)), H))
)
pi.hat <- M.propen(A = A, Xs = H)
set.seed(789)
hyper_tree <-
DTRtree(
Y = Y,
A = A,
H = H,
pis.hat = pi.hat,
m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 15,
lambda.pct = 0.1,
depth = 2
)
# Plot Figure 2 Stage 1
stage1 <- plot(plot.DTR.tree(round(hyper_tree, 0), H = H))
stage1
#######################################################################################
#
#
#   Filename    :	hyper_emergency_dtr_estimation.R
#
#   Project     :       BiomJ article "Optimal dynamic treatment regime estimation using information extraction from unstructured clinical text"
#   Authors     :       Nina Zhou, Robert Brook, Ivo Dinov, and Lu Wang
#   Date        :       11/28/2021
#   Purpose     :       As described in BiomJ article
#
#   R Version   :       4.0.2 (2020-06-22)
#   RStudio Version    :  	1.3.959
#   Command   :  	nohup Rscript hyper_emergency_dtr_estimation.R &
#
#   Input data  :    application_data.csv
#   Output data files :   Rplots.pdf (Figure 2 application section)
#
#   Required R packages :  dplyr, randomForest, webshot, htmlwidgets
#
########################################################################################
###########Fit the DTR ################
library(randomForest)
library(dplyr)
library(webshot)
library(htmlwidgets)
#webshot::install_phantomjs() # install PhatomJS for the first time running the program
source("../function/Functions.R")
source("../function/plot_tree.R")
# load reprocessed application data.
vital_demo_drug_2 <- read.csv("../data/data_hyper_emergency/application_data_day2.csv")
vital_demo_drug_1 <- read.csv("../data/data_hyper_emergency/application_data_day1.csv")
vital_demo_drug_2$HR[which(is.na(vital_demo_drug_2$HR))] = mean(vital_demo_drug_2$HR, na.rm = TRUE)
vital_demo_drug_2$Temp[which(is.na(vital_demo_drug_2$Temp))] = mean(vital_demo_drug_2$Temp, na.rm = TRUE)
vital_demo_drug_2$SpO2[which(is.na(vital_demo_drug_2$SpO2))] = mean(vital_demo_drug_2$SpO2, na.rm = TRUE)
vital_demo_drug_2$trt <- ifelse(vital_demo_drug_2$cal == 1,
3,
ifelse(
vital_demo_drug_2$beta == 1,
2,
ifelse(vital_demo_drug_2$ace == 1, 1, 4)
))
vital_demo_drug_1$trt <- ifelse(vital_demo_drug_1$cal == 1,
3,
ifelse(
vital_demo_drug_1$beta == 1,
2,
ifelse(vital_demo_drug_1$ace == 1, 1, 4)
))
vital_demo_drug_2 <-
vital_demo_drug_2 %>% left_join(vital_demo_drug_1 %>% select(icustay_id, trt), by =
"icustay_id")
Y <- vital_demo_drug_2$sbp -  vital_demo_drug_2$final_sbp
#Characteristics
# HR,Resp,ADMISSION_AGE,wt_avg,GENDER,smoke, kidney, diabetes, copd,neuro
H <-
cbind(vital_demo_drug_2[, c(
"dbp",
"sbp",
"HR",
"SpO2",
"age",
"wt_avg",
"GENDER",
"smoke",
"kidney",
"diabetes",
"copd",
"hyper"
)], A1 = vital_demo_drug_2$trt.y)
#1=A,2=B,3=C,4=D
A = vital_demo_drug_2$trt.x
R2surf <-
randomForest(
x = cbind(A, H),
y = Y,
mtry = 4,
maxnodes = 20,
importance = TRUE
)
#############Continue DTR estimation#############3
mu.hat <- cbind(
predict(R2surf, newdata = cbind(A = rep(1, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(2, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(3, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(4, nrow(
H
)), H))
)
#mu.hat <- R2surf$mus.reg
pi.hat <- M.propen(A = A, Xs = H)
hyper_tree2 <-
DTRtree(
Y = Y,
A = A,
H = H,
pis.hat = pi.hat,
m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 20,
lambda.pct = 0.3,
depth = 1
)
# Plot Figure 2 stage 2
stage2 <- plot(plot.DTR.tree(round(hyper_tree2, 0), H = H))
saveWidget(stage2,"temp.html")
webshot("temp.html","stage2_dtr.png", vwidth = 500, vheight = 500)
rec_trt <- predict.DTR(hyper_tree2, newdata = H)
R2.pred <- predict(R2surf, newdata = cbind(A = rec_trt, H))
R2.true <- predict(R2surf, newdata = cbind(A = A, H))
#Stage 1
#Calculate pseudo outcomes.
Y1 <- vital_demo_drug_2$final_sbp + R2.pred - R2.true
Y1_pseudo = c()
for (i in vital_demo_drug_1$icustay_id) {
if (i %in% vital_demo_drug_2$icustay_id) {
Y1_pseudo = c(Y1_pseudo, Y1[which(vital_demo_drug_2$icustay_id == i)])
} else{
Y1_pseudo = c(Y1_pseudo, NA)
}
}
vital_demo_drug_1$Y1_pseudo = Y1_pseudo
vital_demo_drug_1$final_pseudo <-
ifelse(
is.na(vital_demo_drug_1$Y1_pseudo),
vital_demo_drug_1$final_sbp,
vital_demo_drug_1$Y1_pseudo
)
vital_demo_drug_1$TempC_Mean[which(is.na(vital_demo_drug_1$TempC_Mean))] = mean(vital_demo_drug_1$TempC_Mean, na.rm = TRUE)
Y <- (vital_demo_drug_1$SysBP_Max - vital_demo_drug_1$final_pseudo)
#Characteristics
# HR,Resp,ADMISSION_AGE,wt_avg,GENDER,smoke, kidney, diabetes, copd,neuro
H <-
cbind(vital_demo_drug_1[, c(
"SysBP_Max",
"DiasBP_Max",
"HeartRate_Mean",
"TempC_Mean",
"SpO2_Mean",
"hemoglobin_max",
"age",
"creatinine_min",
"wt_avg",
"GENDER",
"smoke",
"kidney",
"diabetes",
"copd",
"hyper"
)])
#1=A,2=B,3=C,4=D
A = vital_demo_drug_1$trt
R1surf1 <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 1000,
importance = TRUE
)
R1surf <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 500,
mtry = 4,
nodesize = 20,
importance = TRUE
)
mu.hat <- cbind(
predict(R1surf, newdata = cbind(A = rep(1, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(2, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(3, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(4, nrow(
H
)), H))
)
pi.hat <- M.propen(A = A, Xs = H)
set.seed(789)
hyper_tree <-
DTRtree(
Y = Y,
A = A,
H = H,
pis.hat = pi.hat,
m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 15,
lambda.pct = 0.1,
depth = 2
)
# Plot Figure 2 Stage 1
stage1 <- plot(plot.DTR.tree(round(hyper_tree, 0), H = H))
stage1
#######################################################################################
#
#
#   Filename    :	hyper_emergency_dtr_estimation.R
#
#   Project     :       BiomJ article "Optimal dynamic treatment regime estimation using information extraction from unstructured clinical text"
#   Authors     :       Nina Zhou, Robert Brook, Ivo Dinov, and Lu Wang
#   Date        :       11/28/2021
#   Purpose     :       As described in BiomJ article
#
#   R Version   :       4.0.2 (2020-06-22)
#   RStudio Version    :  	1.3.959
#   Command   :  	nohup Rscript hyper_emergency_dtr_estimation.R &
#
#   Input data  :    application_data.csv
#   Output data files :   Rplots.pdf (Figure 2 application section)
#
#   Required R packages :  dplyr, randomForest, webshot, htmlwidgets
#
########################################################################################
###########Fit the DTR ################
library(randomForest)
library(dplyr)
library(webshot)
library(htmlwidgets)
#webshot::install_phantomjs() # install PhatomJS for the first time running the program
source("../function/Functions.R")
source("../function/plot_tree.R")
# load reprocessed application data.
vital_demo_drug_2 <- read.csv("../data/data_hyper_emergency/application_data_day2.csv")
vital_demo_drug_1 <- read.csv("../data/data_hyper_emergency/application_data_day1.csv")
vital_demo_drug_2$HR[which(is.na(vital_demo_drug_2$HR))] = mean(vital_demo_drug_2$HR, na.rm = TRUE)
vital_demo_drug_2$Temp[which(is.na(vital_demo_drug_2$Temp))] = mean(vital_demo_drug_2$Temp, na.rm = TRUE)
vital_demo_drug_2$SpO2[which(is.na(vital_demo_drug_2$SpO2))] = mean(vital_demo_drug_2$SpO2, na.rm = TRUE)
vital_demo_drug_2$trt <- ifelse(vital_demo_drug_2$cal == 1,
3,
ifelse(
vital_demo_drug_2$beta == 1,
2,
ifelse(vital_demo_drug_2$ace == 1, 1, 4)
))
vital_demo_drug_1$trt <- ifelse(vital_demo_drug_1$cal == 1,
3,
ifelse(
vital_demo_drug_1$beta == 1,
2,
ifelse(vital_demo_drug_1$ace == 1, 1, 4)
))
vital_demo_drug_2 <-
vital_demo_drug_2 %>% left_join(vital_demo_drug_1 %>% select(icustay_id, trt), by =
"icustay_id")
Y <- vital_demo_drug_2$sbp -  vital_demo_drug_2$final_sbp
#Characteristics
# HR,Resp,ADMISSION_AGE,wt_avg,GENDER,smoke, kidney, diabetes, copd,neuro
H <-
cbind(vital_demo_drug_2[, c(
"dbp",
"sbp",
"HR",
"SpO2",
"age",
"wt_avg",
"GENDER",
"smoke",
"kidney",
"diabetes",
"copd",
"hyper"
)], A1 = vital_demo_drug_2$trt.y)
#1=A,2=B,3=C,4=D
A = vital_demo_drug_2$trt.x
R2surf <-
randomForest(
x = cbind(A, H),
y = Y,
mtry = 4,
maxnodes = 20,
importance = TRUE
)
#############Continue DTR estimation#############3
mu.hat <- cbind(
predict(R2surf, newdata = cbind(A = rep(1, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(2, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(3, nrow(
H
)), H)),
predict(R2surf, newdata = cbind(A = rep(4, nrow(
H
)), H))
)
#mu.hat <- R2surf$mus.reg
pi.hat <- M.propen(A = A, Xs = H)
hyper_tree2 <-
DTRtree(
Y = Y,
A = A,
H = H,
pis.hat = pi.hat,
m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 20,
lambda.pct = 0.3,
depth = 1
)
# Plot Figure 2 stage 2
stage2 <- plot(plot.DTR.tree(round(hyper_tree2, 0), H = H))
saveWidget(stage2,"temp.html")
webshot("temp.html","stage2_dtr.png", vwidth = 500, vheight = 500)
rec_trt <- predict.DTR(hyper_tree2, newdata = H)
R2.pred <- predict(R2surf, newdata = cbind(A = rec_trt, H))
R2.true <- predict(R2surf, newdata = cbind(A = A, H))
#Stage 1
#Calculate pseudo outcomes.
Y1 <- vital_demo_drug_2$final_sbp + R2.pred - R2.true
Y1_pseudo = c()
for (i in vital_demo_drug_1$icustay_id) {
if (i %in% vital_demo_drug_2$icustay_id) {
Y1_pseudo = c(Y1_pseudo, Y1[which(vital_demo_drug_2$icustay_id == i)])
} else{
Y1_pseudo = c(Y1_pseudo, NA)
}
}
vital_demo_drug_1$Y1_pseudo = Y1_pseudo
vital_demo_drug_1$final_pseudo <-
ifelse(
is.na(vital_demo_drug_1$Y1_pseudo),
vital_demo_drug_1$final_sbp,
vital_demo_drug_1$Y1_pseudo
)
vital_demo_drug_1$TempC_Mean[which(is.na(vital_demo_drug_1$TempC_Mean))] = mean(vital_demo_drug_1$TempC_Mean, na.rm = TRUE)
Y <- (vital_demo_drug_1$SysBP_Max - vital_demo_drug_1$final_pseudo)
#Characteristics
# HR,Resp,ADMISSION_AGE,wt_avg,GENDER,smoke, kidney, diabetes, copd, neuro
H <-
cbind(vital_demo_drug_1[, c(
"SysBP_Max",
"HeartRate_Mean",
"TempC_Mean",
"SpO2_Mean",
"age",
"creatinine_min",
"wt_avg",
"GENDER",
"smoke",
"kidney",
"diabetes",
"copd",
"hyper"
)])
#1=A,2=B,3=C,4=D
A = vital_demo_drug_1$trt
R1surf1 <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 1000,
importance = TRUE
)
R1surf <-
randomForest(
x = cbind(A, H),
y = Y,
ntree = 500,
mtry = 4,
nodesize = 20,
importance = TRUE
)
mu.hat <- cbind(
predict(R1surf, newdata = cbind(A = rep(1, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(2, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(3, nrow(
H
)), H)),
predict(R1surf, newdata = cbind(A = rep(4, nrow(
H
)), H))
)
pi.hat <- M.propen(A = A, Xs = H)
set.seed(789)
hyper_tree <-
DTRtree(
Y = Y,
A = A,
H = H,
pis.hat = pi.hat,
m.method = "AIPW",
mus.reg = mu.hat,
minsplit = 15,
lambda.pct = 0.1,
depth = 2
)
# Plot Figure 2 Stage 1
stage1 <- plot(plot.DTR.tree(round(hyper_tree, 0), H = H))
saveWidget(stage1,"temp.html")
webshot("temp.html","stage1_dtr.png", vwidth = 500, vheight = 500)
rec_trt <- predict.DTR(hyper_tree, newdata = H)
R1.pred <- predict(R1surf, newdata = cbind(A = rec_trt, H))
R1.true <- predict(R1surf, newdata = cbind(A = A, H))
